"""Initial schema incl extended client fields

Revision ID: 5368e9d16126
Revises: 
Create Date: 2025-07-17 07:58:39.055249

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '5368e9d16126'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('category',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_category')),
    sa.UniqueConstraint('name', name=op.f('uq_category_name'))
    )
    op.create_table('client',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('email', sa.String(length=100), nullable=False),
    sa.Column('unique_url', sa.String(length=200), nullable=False),
    sa.Column('features', sa.Text(), nullable=True),
    sa.Column('points', sa.Integer(), nullable=True),
    sa.Column('daily_metrics', sa.Text(), nullable=True),
    sa.Column('archived', sa.Boolean(), nullable=True),
    sa.Column('deleted', sa.Boolean(), nullable=True),
    sa.Column('phone', sa.String(length=20), nullable=True),
    sa.Column('age', sa.Integer(), nullable=True),
    sa.Column('gender', sa.String(length=20), nullable=True),
    sa.Column('height', sa.Float(), nullable=True),
    sa.Column('weight', sa.Float(), nullable=True),
    sa.Column('bodyfat', sa.Float(), nullable=True),
    sa.Column('goals', sa.Text(), nullable=True),
    sa.Column('medical_history', sa.Text(), nullable=True),
    sa.Column('injuries', sa.Text(), nullable=True),
    sa.Column('lifestyle', sa.Text(), nullable=True),
    sa.Column('hours_sleep', sa.Integer(), nullable=True),
    sa.Column('stress_level', sa.String(length=20), nullable=True),
    sa.Column('hydration_level', sa.Float(), nullable=True),
    sa.Column('nutrition_habits', sa.Text(), nullable=True),
    sa.Column('workout_history', sa.Text(), nullable=True),
    sa.Column('workout_frequency', sa.Integer(), nullable=True),
    sa.Column('workout_preference', sa.Text(), nullable=True),
    sa.Column('workout_availability', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_client')),
    sa.UniqueConstraint('email', name=op.f('uq_client_email')),
    sa.UniqueConstraint('unique_url', name=op.f('uq_client_unique_url'))
    )
    op.create_table('equipment',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_equipment')),
    sa.UniqueConstraint('name', name=op.f('uq_equipment_name'))
    )
    op.create_table('group',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('client_ids', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_group'))
    )
    op.create_table('license',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('key', sa.String(length=36), nullable=False),
    sa.Column('issued_at', sa.DateTime(), nullable=True),
    sa.Column('is_valid', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_license')),
    sa.UniqueConstraint('key', name=op.f('uq_license_key'))
    )
    op.create_table('muscle',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_muscle')),
    sa.UniqueConstraint('name', name=op.f('uq_muscle_name'))
    )
    op.create_table('program',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('weeks', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_program'))
    )
    op.create_table('prospect',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('email', sa.String(length=100), nullable=False),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_prospect'))
    )
    op.create_table('recipe',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('ingredients', sa.Text(), nullable=True),
    sa.Column('instructions', sa.Text(), nullable=True),
    sa.Column('macros', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_recipe'))
    )
    op.create_table('resource',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('title', sa.String(length=100), nullable=False),
    sa.Column('filename', sa.String(length=200), nullable=False),
    sa.Column('uploaded_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_resource'))
    )
    op.create_table('workout_template',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('days', sa.Text(), nullable=True),
    sa.Column('tags', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_workout_template'))
    )
    op.create_table('achievement',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('client_id', sa.String(), nullable=False),
    sa.Column('type', sa.String(length=50), nullable=False),
    sa.Column('title', sa.String(length=200), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('unlocked_at', sa.DateTime(), nullable=True),
    sa.Column('icon', sa.String(length=10), nullable=True),
    sa.ForeignKeyConstraint(['client_id'], ['client.id'], name=op.f('fk_achievement_client_id_client')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_achievement'))
    )
    op.create_table('alert',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('client_id', sa.String(), nullable=False),
    sa.Column('type', sa.String(length=100), nullable=False),
    sa.Column('message', sa.Text(), nullable=False),
    sa.Column('details', sa.Text(), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['client_id'], ['client.id'], name=op.f('fk_alert_client_id_client')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_alert'))
    )
    op.create_table('body_stat',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('client_id', sa.String(), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('weight', sa.Float(), nullable=True),
    sa.Column('measurements', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['client_id'], ['client.id'], name=op.f('fk_body_stat_client_id_client')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_body_stat'))
    )
    op.create_table('daily_checkin',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('client_id', sa.String(), nullable=False),
    sa.Column('checkin_date', sa.Date(), nullable=False),
    sa.Column('metrics', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['client_id'], ['client.id'], name=op.f('fk_daily_checkin_client_id_client')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_daily_checkin'))
    )
    op.create_table('exercise',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('instructions', sa.Text(), nullable=True),
    sa.Column('media_url', sa.String(length=200), nullable=True),
    sa.Column('local_media_path', sa.String(length=200), nullable=True),
    sa.Column('category_id', sa.Integer(), nullable=True),
    sa.Column('equipment_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['category_id'], ['category.id'], name=op.f('fk_exercise_category_id_category')),
    sa.ForeignKeyConstraint(['equipment_id'], ['equipment.id'], name=op.f('fk_exercise_equipment_id_equipment')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_exercise'))
    )
    with op.batch_alter_table('exercise', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_exercise_name'), ['name'], unique=False)

    op.create_table('meal_plan',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('client_id', sa.String(), nullable=False),
    sa.Column('recipe_id', sa.String(), nullable=False),
    sa.Column('assigned_date', sa.Date(), nullable=False),
    sa.ForeignKeyConstraint(['client_id'], ['client.id'], name=op.f('fk_meal_plan_client_id_client')),
    sa.ForeignKeyConstraint(['recipe_id'], ['recipe.id'], name=op.f('fk_meal_plan_recipe_id_recipe')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_meal_plan'))
    )
    op.create_table('message',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('client_id', sa.String(), nullable=False),
    sa.Column('sender_type', sa.String(length=50), nullable=False),
    sa.Column('text', sa.Text(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['client_id'], ['client.id'], name=op.f('fk_message_client_id_client')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_message'))
    )
    op.create_table('nutrition_log',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('client_id', sa.String(), nullable=False),
    sa.Column('log_date', sa.Date(), nullable=False),
    sa.Column('food_item', sa.String(length=200), nullable=False),
    sa.Column('macros', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['client_id'], ['client.id'], name=op.f('fk_nutrition_log_client_id_client')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_nutrition_log'))
    )
    op.create_table('program_assignment',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('client_id', sa.String(), nullable=False),
    sa.Column('template_id', sa.String(), nullable=False),
    sa.Column('start_date', sa.Date(), nullable=False),
    sa.Column('current_day_index', sa.Integer(), nullable=True),
    sa.Column('active', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['client_id'], ['client.id'], name=op.f('fk_program_assignment_client_id_client')),
    sa.ForeignKeyConstraint(['template_id'], ['workout_template.id'], name=op.f('fk_program_assignment_template_id_workout_template')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_program_assignment')),
    sa.UniqueConstraint('client_id', 'active', name='_client_active_uc')
    )
    op.create_table('progress_photo',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('client_id', sa.String(), nullable=False),
    sa.Column('filename', sa.String(length=200), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['client_id'], ['client.id'], name=op.f('fk_progress_photo_client_id_client')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_progress_photo'))
    )
    op.create_table('exercise_muscle',
    sa.Column('exercise_id', sa.String(), nullable=False),
    sa.Column('muscle_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['exercise_id'], ['exercise.id'], name=op.f('fk_exercise_muscle_exercise_id_exercise')),
    sa.ForeignKeyConstraint(['muscle_id'], ['muscle.id'], name=op.f('fk_exercise_muscle_muscle_id_muscle')),
    sa.PrimaryKeyConstraint('exercise_id', 'muscle_id', name=op.f('pk_exercise_muscle'))
    )
    op.create_table('workout_log',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('client_id', sa.String(), nullable=False),
    sa.Column('assignment_id', sa.String(), nullable=False),
    sa.Column('day_index_completed', sa.Integer(), nullable=False),
    sa.Column('actual_date', sa.Date(), nullable=False),
    sa.Column('performance_data', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['assignment_id'], ['program_assignment.id'], name=op.f('fk_workout_log_assignment_id_program_assignment')),
    sa.ForeignKeyConstraint(['client_id'], ['client.id'], name=op.f('fk_workout_log_client_id_client')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_workout_log'))
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('workout_log')
    op.drop_table('exercise_muscle')
    op.drop_table('progress_photo')
    op.drop_table('program_assignment')
    op.drop_table('nutrition_log')
    op.drop_table('message')
    op.drop_table('meal_plan')
    with op.batch_alter_table('exercise', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_exercise_name'))

    op.drop_table('exercise')
    op.drop_table('daily_checkin')
    op.drop_table('body_stat')
    op.drop_table('alert')
    op.drop_table('achievement')
    op.drop_table('workout_template')
    op.drop_table('resource')
    op.drop_table('recipe')
    op.drop_table('prospect')
    op.drop_table('program')
    op.drop_table('muscle')
    op.drop_table('license')
    op.drop_table('group')
    op.drop_table('equipment')
    op.drop_table('client')
    op.drop_table('category')
    # ### end Alembic commands ###
